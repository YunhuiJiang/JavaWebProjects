<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.deepsl.hrm.dao.EmployeeDao">

<!-- private Integer id;			// id
	private Dept dept;			// 部门
	private Job job;			// 职位
	private String name;		// 名称
	private String cardId;		// 身份证
	private String address;		// 地址
	private String postCode;	// 邮政编码
	private String tel;			// 电话
	private String phone;		// 手机
	private String qqNum;		// qq
	private String email;		// 邮箱
	private Integer sex;		// 性别
	private String party;		// 政治面貌

	private java.util.Date birthday;	//生日
	private String race;				// 名族
	private String education;			// 学历
	private String speciality;			// 专业
	private String hobby;				// 爱好
	private String remark;				// 备注
	private java.util.Date createDate;	// 建档日期 -->
  
  	<resultMap type="org.deepsl.hrm.domain.Employee" id="employeeResultMap">
		<id property="id" column="e_id" />
		<!-- <result property="userId" column="user_id" /> -->
		<result property="name" column="e_name" />
		<result property="cardId" column="card_id" />
		<result property="address" column="address" />
		<result property="phone" column="phone" />
		<result property="email" column="email" />
		<result property="createDate" column="create_date" />
		
		
		<result property="birthday" column="birthday" />
		<result property="sex" column="sex" />
		
		<result property="postCode" column="post_code" />
		<result property="qqNum" column="qq_num" />		
		<result property="tel" column="tel" />
		<result property="party" column="party" />
		<result property="race" column="race" />
		<result property="education" column="education" />
		<result property="speciality" column="speciality" />
		<result property="hobby" column="hobby" />
		<result property="remark" column="e_remark" />
		
	
		<!-- association ：配置一对一属性 -->
		<!-- property:notice里面的User属性名 -->
		<!-- javaType:属性类型 -->
		<association property="dept" javaType="org.deepsl.hrm.domain.Dept">
			<id property="id" column="dept_id" />
			<result property="name" column="d_name" />
			<result property="remark" column="d_remark" />	
		</association>
		
		<association property="job" javaType="org.deepsl.hrm.domain.Job">
			<id property="id" column="job_id" />
			<result property="name" column="j_name" />
			<result property="remark" column="j_remark" />	
		</association>
		
	</resultMap>
	
	<sql id="allpart">
		 d.name as "d_name",d.remark as "d_remark",j.name as "j_name",j.remark as "j_remark",dept_id,job_id,
		 e.id as e_id,
		 e.name as "e_name",
		 card_id,
		 address,
		 post_code,
		 tel,
		 phone,
		 qq_num,
		 email,
		 sex,
		 party,
		 birthday,
		 race,
		 education,
		 speciality,
		 hobby,
		 e.remark as "e_remark",
		 create_date
	</sql>
  	

   
   <select id="selectById" parameterType="int"  resultMap="employeeResultMap" >
		 select <include refid="allpart"></include> from  (employee_inf e inner join dept_inf d on e.dept_id=d.id) inner join job_inf j on e.job_id=j.id  where e.id=#{id} 
   </select>
   
   <delete id="deleteById" parameterType="int" >
   		delete from employee_inf where id=#{id}
   </delete>
   
   
    <insert id="save" parameterType="org.deepsl.hrm.domain.Employee" >
  		<selectKey keyProperty="id" resultType="Integer" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
		
   		insert into employee_inf (
   		<trim prefix=" " suffixOverrides=",">
   			<if test="name!=null and name.trim()!=''">
	         	 name,
	         </if>
	         <if test="address!=null and address.trim()!=''">
	         	 address,
	         </if>
	         <if test="phone!=null and phone.trim()!=''">
	         	 phone,
	         </if>
	         <if test="email!=null and email.trim()!=''">
	         	 email,
	         </if>
	         <if test="cardId!=null and cardId.trim()!=''">
	         	 card_id,
	         </if>
	         <if test="createDate!=null ">
	         	 create_date,
	         </if>
	         
	         <if test="dept!=null and dept.id!=null  ">
	         	 dept_id,
	         </if>
	         <if test="job!=null and job.id!=null  ">
	         	 job_id,
	         </if>
	    </trim>
   		) values(
   		<trim prefix=" " suffixOverrides=",">
   			<if test="name!=null and name.trim()!=''">
	         	 #{name},
	         </if>
	         <if test="address!=null and address.trim()!=''">
	         	 #{address},
	         </if>
	         <if test="phone!=null and phone.trim()!=''">
	         	 #{phone},
	         </if>
	         <if test="email!=null and email.trim()!=''">
	         	 #{email},
	         </if>
	         <if test="cardId!=null and cardId.trim()!=''">
	         	 #{cardId},
	         </if>
	         <if test="createDate!=null ">
	         	 #{createDate},
	         </if>
	         
	         <if test="dept!=null and dept.id!=null  ">
	         	 #{dept.id},
	         </if>
	         <if test="job!=null and job.id!=null  ">
	         	 #{job.id},
	         </if>
	    </trim>
	    )
   </insert>
   
   <update id="update" parameterType="org.deepsl.hrm.domain.Employee">
   		update employee_inf 
   		<trim prefix="set" suffixOverrides=",">
   			<if test="name!=null and name.trim()!=''">
	         	name= #{name},
	         </if>
	         <if test="address!=null and address.trim()!=''">
	         	 address=#{address},
	         </if>
	         <if test="phone!=null and phone.trim()!=''">
	         	phone =#{phone},
	         </if>
	         <if test="email!=null and email.trim()!=''">
	         	email= #{email},
	         </if>
	         <if test="cardId!=null and cardId.trim()!=''">
	         	card_id= #{cardId},
	         </if>
	         
	         <if test="dept!=null and dept.id!=null  ">
	         	dept_id= #{dept.id},
	         </if>
	         <if test="job!=null and job.id!=null  ">
	         	job_id =#{job.id},
	         </if>
	    </trim>
 			WHERE id=#{id}
   </update>
   

	
	<!-- <resultMap type="user" id="userList">
		<id 
	</resultMap> -->
	<select id="count" parameterType="hashmap"  resultType="Integer" >
		 select count(*) from  (employee_inf e inner join dept_inf d on e.dept_id=d.id) inner join job_inf j on e.job_id=j.id
		 <where> <!-- name,cardId,sex,phone -->
		 	<trim prefix=" " suffixOverrides="and">
   			<if test="employee.name!=null and employee.name.trim()!=''">
	         	 e.name like #{employee.name} and
	         </if>
	         <if test="employee.phone!=null and employee.phone.trim()!='' ">
	         	 phone like #{employee.phone} and 
	         </if>
	         <if test="employee.cardId!=null and employee.cardId.trim()!='' ">
	         	 card_id like #{employee.cardId} and 
	         </if>
	         <if test="employee.sex!=null and employee.sex!=0  ">
	         	 sex = #{employee.sex} and 
	         </if>
	         
	        <if test="employee.dept!=null and employee.dept.id!=null ">
	         	 dept_id = #{employee.dept.id} and 
	         </if>
	         <if test="employee.job!=null and employee.job.id!=null  ">
	         	 job_id = #{employee.job.id} and 
	         </if>
	    </trim>
		 </where>	 
   </select>
   
   
	<select id="selectByPage" parameterType="hashmap"  resultMap="employeeResultMap" >
		 select <include refid="allpart"/> from  (employee_inf e inner join dept_inf d on e.dept_id=d.id) inner join job_inf j on e.job_id=j.id
		 <where>
		 	<trim prefix=" " suffixOverrides="and">
   			<if test="employee.name!=null and employee.name.trim()!=''">
	         	 e.name like #{employee.name} and
	         </if>
	         <if test="employee.phone!=null and employee.phone.trim()!='' ">
	         	 phone like #{employee.phone} and 
	         </if>
	         <if test="employee.cardId!=null and employee.cardId.trim()!='' ">
	         	 card_id like #{employee.cardId} and 
	         </if>
	         <if test="employee.sex!=null and employee.sex!=0   ">
	         	 sex = #{employee.sex} and 
	         </if>
	         
	         <if test="employee.dept!=null and employee.dept.id!=null ">
	         	 dept_id = #{employee.dept.id} and 
	         </if>
	         <if test="employee.job!=null and employee.job.id!=null  ">
	         	 job_id = #{employee.job.id} and 
	         </if>
	    </trim>
	    	
	    	
		 </where>
		 
   			<if test="pageModel.pageSize!=null ">
	         	 limit #{pageModel.pageSize} 
	         </if>
	         <if test="pageModel.pageIndex!=null ">
	         	 offset #{pageModel.firstLimitParam}
	         </if>		 
   </select>

</mapper>